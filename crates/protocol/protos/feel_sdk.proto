syntax = "proto3";
package feel_sdk;

enum AuthType {
  Phone = 0;
}

message RegisterUserReq {
  AuthType auth_type = 1;
  string auth_token = 2;
  string auth_name = 3;
  string nikename = 4;
  string uid = 5;
}

message RegisterUserResp {
  int64 id = 1;
  string uid = 2;
  string nikename = 3;
}

message UnregisterUserReq {
  AuthType auth_type = 1;
  string auth_token = 2;
  string auth_name = 3;
  string id = 4;
}

message UnregisterUserResp {
  int64 id = 1;
  string uid = 2;
  string nikename = 3;
}

message UserLoginReq {
  AuthType auth_type = 1;
  string auth_token = 2;
  string auth_name = 3;
  string id = 4;
}

message UserLoginResp { string token = 2; }

service UserService {
  rpc register_user(RegisterUserReq) returns (RegisterUserResp);
  rpc unregister_user(UnregisterUserReq) returns (UnregisterUserResp);
  rpc user_login(UserLoginReq) returns (UserLoginResp);
}

// 标签
message EffectLabel {
  int32 id = 1;
  int32 effect = 2;
  string name = 3;
  string description = 4;
}

message CreateLabelReq {
  int32 effect = 1;
  string name = 2;
  string description = 3;
}

message CreateLabelResp { EffectLabel effect_label = 1; }

message GetUserEffctReq { string uid = 1; }

message GetUserEffctResp { int64 effect = 1; }

message GetFeelReq { string uid = 1; }

message GetFeelResp { repeated EffectLabel effect_label = 1; }

service FeelService {
  rpc create_label(CreateLabelReq) returns (CreateLabelResp);
  rpc get_user_effct(GetUserEffctReq) returns (GetUserEffctResp);
  rpc get_feel(GetFeelReq) returns (GetFeelResp);
}